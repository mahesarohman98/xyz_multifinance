openapi: "3.0.0"
info:
  title: Transaction API
  description: API for managing loan applications.
  contact:
    name: Mahesa Rohman
    email: mahesarohman30@gmail.com
  version: 1.0.0
servers:
  - url: "{protocol}://{hostname}/api/v1"
    variables:
      protocol:
        enum:
          - http
          - https
        default: http
      hostname:
        default: localhost:3000
paths:
  /loans:
    post:
      summary: Submit Loan Application
      description: |
        This endpoint allows customers to submit a loan application
        with details of the assets they want to finance.
      operationId: SubmitLoan
      security:
        - bearerAuth: []
      requestBody:
        required: true
        description: Loan application details.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Loan"
            example:
              customerId: "cust-12345"
              externalId: "external-56789"
              tenor: 6
              loans:
                - contractNumber: "CTR-001"
                  otr: 8000000
                  amountInterest: 12000
                  assetName: "Sepeda"
                - contractNumber: "CTR-002"
                  otr: 1200000
                  amountInterest: 12000
                  assetName: "Mesin cuci"
      responses:
        '201':
          description: Loan successfully created.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Message"
              example:
                message: "Loan created successfully."
        '400':
          description: Bad Request - Validation error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                code: "400"
                message: "Invalid loan application data."
        '500':
          description: Internal Server Error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                code: "500"
                message: "Internal Server Error."
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    Loan:
      type: object
      required:
        - customerId
        - externalId
        - tenor
        - loans
      properties:
        customerId:
          type: string
          description: "Unique ID of the customer applying for the loan."
          example: "cust-12345"
        externalId:
          type: string
          description: "External reference ID for the loan application."
          example: "external-56789"
        tenor:
          type: integer
          description: "Loan tenor in months."
          example: 12
        loans:
          type: array
          description: "List of assets included in the loan application."
          items:
            type: object
            required:
              - contractNumber
              - otr
              - amountInterest
              - assetName
            properties:
              contractNumber:
                type: string
                description: "Unique contract number for the asset."
                example: "CTR-001"
              otr:
                type: number
                format: double
                description: "On The Road (OTR) price of the asset."
                example: 120000000
              amountInterest:
                type: number
                format: double
                description: "Interest amount for the asset loan."
                example: 5000000
              assetName:
                type: string
                description: "Name of the asset."
                example: "Toyota Avanza"

    Message:
      type: object
      required:
        - message
      properties:
        message:
          type: string
          description: "Message indicating the result of the API call."
          example: "Loan created successfully."

    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: string
          description: "Error code indicating the type of error."
          example: "500"
        message:
          type: string
          description: "Detailed error message."
          example: "Internal Server Error."
